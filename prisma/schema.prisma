// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id               Int     @id @default(autoincrement())
  login            String
  password         String
  email            String
  telephone_number String?
  name             String?
  first_surname    String?
  second_surname   String?

  @@map("users")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String   @unique
  category      Category @relation(fields: [category_name], references: [name], onDelete: Cascade)
  category_name String
  image_name    String   @unique

  variants Variant[]

  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  OrderItems OrderItems[]

  @@map("products")
}

model Variant {
  id     Int @id @default(autoincrement())
  height Int
  width  Int
  length Int
  weight Int
  price  Int

  Product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id Int

  size_label String @default("Стандартний")

  OrderItems OrderItems[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("variants")
}

model Category {
  id      Int       @default(autoincrement())
  name    String    @id @unique
  Product Product[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("categories")
}

model Order {
  id Int @id @default(autoincrement())

  name           String
  first_surname  String
  second_surname String
  phone_number   String
  email          String

  order_items OrderItems[]

  amount Int
  price  Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("orders")
}

model OrderItems {
  id Int @unique @default(autoincrement())

  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id Int

  variant    Variant @relation(fields: [variant_id], references: [id], onDelete: Cascade)
  variant_id Int

  color      Color  @relation(fields: [color_name], references: [name], onDelete: Cascade)
  color_name String

  amount   Int
  price    Int
  plastic  Plastic
  Order    Order   @relation(fields: [order_id], references: [id])
  order_id Int

  @@map("order_items")
}

model Color {
  id   Int    @default(autoincrement())
  name String @id @unique
  hex  String @unique

  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  OrderItems OrderItems[]

  @@map("colors")
}

enum Plastic {
  PLA
  CoPET
}
